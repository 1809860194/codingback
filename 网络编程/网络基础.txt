网络互联网因特网：全球最大的互联网通过域名查询 IP nslookup：域名    nslookup     www.baidu.comISO / OSI 参考模型物理层：电气特性，设备规范，RJ-45。传输数据单位 bit 。这一层的设备有网卡。            --界定连接器和网线的规格。数据链路层：数据成帧，来源去向，检测错误，交换机，帧。            --互联网之间传送和识别数据帧。        链路：没有数据的一段线路。        发送的数据，广播数据，组播数据。网络层：选择最佳路径从源将数据送到目的端，IP 划分。路由器，数据单位，数据包。负责将数据送到目的地，但不一定送到，即不可靠。IP ICMP         --地址管理与路由选择。传输层：负责将数据交给具体的进程。端口。保证数据可靠送达，流量控制（两个机器之间的数据接收能力），拥塞控制（整个网络的拥堵程度） UDP TCP         --管理两个节点之间的数据传输。负责可靠传输（确保数据被可靠的传送的目标地址）。会话层：建立连接，过程管理，断开连接。       --通信管理：负责建立和断开网络连接（数据流动的逻辑通路）管理传输层以下的分层netstat -nb表示层：加密，压缩，改变字节序。        --设备固有数据格式和网络标准数据格式的转换 - 网络转换器。应用层：凡是能够产生网络流量的进程都属于应用层。    --针对特定的应用协议 - 应用程序访问网络的窗口 - 最复杂，协议最多网络排除故障：        原则：从底层向上一次排除（网线是否接好）--物理层                  arp -a                   arp -s IP MAC 手动设置 MAC 地址    --数据链路层                  ping                  pathping        --网络层上网的方式;        B / S：通过浏览器        C / S：客户端自己写        P : P：point to pointTCP / IP 参考模型应用层应用层HTTP、FTP、POP3、SMTP、DNS表示层会话层传输层传输层TCP、UDP、ICMP、IP、ARP、内核网络层网络层数据链路层数据链路层驱动及硬件物理层网路协议栈：研究各层内核源代码。应用层协议HTTP 协议<超文本传输协议>URL        URL 当中的查询字符串就是键值对，键值对与键值对之间用 & 分隔，键与值之间用 = 分隔。        掌握：地址、端口号、查询字符串        键值对里包含一些特殊字符        urlencode、urldecode        转义规则：将需要转码的字符串转为 16 进制，然后从左至右，取 4 位，（不足 4 位直接处理），每两位做一位前面加上 % 编码成 %XY 格式        urldecode 就是 urlencode 的逆过程。HTTP 协议格式HTTP 请求报文格式：get 和 post 请求的区别（面试）（http 的状态码都有哪些）        首行：方法（method）url 版本号        header：若干行的的键值对，每一行是一个键值对。键值对的键和值之间用 ：来分割        空行：只包含一个 \n ，作为 header 的结束标记。        body：数据格式取决于 header 中的 Content-Type 字段，比较常见的方法是 body 格式和 query_string 的格式相   同。数据的长度取决于 header 中的 Content-Length 字段HTTP 响应报文格式：        首行： 版本号、状态码、状态码解释        header：若干行的的键值对，每一行是一个键值对。键值对的键和值之间用 ：来分割        空行：header 的结束标记。               body：body 的数据格式取决于 Content-Type，往往是一个 html 格式。数据长度取决于 Content-Length ，Set-Cookie 字段决定了客户端应该保存哪些 cookie。HTTP 常见 Header        Content-Type：数据类型（text/html等）        Content-Length：Body 的长度        Host：客户端告知服务器，所请求的资源是在哪个主机的哪个端口上        User-Agent：声明用户的操作系统和浏览器版本信息        referer：当前页面是从哪个页面跳转过来的        location：搭配 3XX 状态码使用，告知客户端接下来要访问哪里        Cookie：用于在客户端存储少量信息，通常用于实现（session）会话功能。传输层协议五元组：源 IP，源端口号，目的 IP，目的端口号，协议号（可通过 netstat -n 查看）IP 首部TCP 首部源 IP 地址目的 IP 地址TCP源端口号目标端口号数据常用端口号：ssh服务器ftp服务器telnet服务器http服务器https服务器22端口21端口23端口80端口443端口pidof [进程名] 通过进程名查看进程 ID UDP 协议UDP 协议端格式UDP 协议头源端口号目的端口号UDP 报文长度2 字节2 字节2 字节2 字节UDP 数据报     校验和        计算校验和的方法    CRC 不是唯一的        接收端再次计算校验和，把新校验和和收到的校验进行对比服务器之间数据传送 校验码对比UDP 的特点无连接: 知道对端的 IP 和端口号就直接进行传输, 不需要建立连接;不可靠: 没有确认机制, 没有重传机制; 如果因为网络故障该段无法发到对?方, UDP协议层也不会给 应?用层返回任何错误信息; 面向数据报: 不能够灵活的控制读写数据的次数和数量全双工：通过一个 udp 的socket 既可以读，也可以写。基于 UDP 的应用层协议（了解）NFS: 网络?文件系统 TFTP: 简单文件传输协议 DHCP: 动态主机配置协议 BOOTP: 启动协议(用于?无盘设备启动) DNS: 域名解析协议TCP 协议连接管理机制    --三次握手建立连接、四次挥手断开连接TIME_WAIT（防止　ACK　丢包）三次握手四次挥手几种重要的状态        LISTEN：准备好了，随时可以连接        ESTABUSHED：允许我们进行数据读写        TIME＿ＷＡIT：最后一个　ACK　包有关        CLOSE＿WAIT：四次挥手没挥完或者服务器端　BUG　，修改　BUG　继续用面试１、服务器端出现大量的　CLOSE＿WAIT　说明什么问题？该如何解决２、服务器端出现大量的　TIME＿WAIT，如何重新使用　TIME＿WAIT　占用的端口号｀解决TIME_WAIT状态引起的bind失败的?方法使用setsockopt()设置socket描述符的 选项SO_REUSEADDR为1, 表示允许创建端口号相同但IP地址不同的 多个socket描述符在server代码的socket()和bind()调?用之间插?入如下代码:int opt = 1;setsocketopt(listenfd, SOL_SOCKET, SO_REUSEADDR, &opt, sizeof(opt));｀TCP　状态转换自己看确认应答　ACK　机制        确认应答字节序之前全部接收超时重传机制        丢包重传、数据包丢失、ACK　包丢失数据包丢失        情况一：数据包抵达，ACK　丢失。部分的　ACK　包丢失可以通过后续的　ACK　进行确认        情况二：１、数据包直接丢失，当发送端一直收到　１００１　这样的　ACK　是在提醒发送端 "我想要的是 1001" ;２、如果发送端主机连续三次收到了同样一个 "1001" 这样的应答, 就会将对应的数据 1001 - 2000 重新 发送３、这个时候接收端收到了 1001 之后, 再次返回的ACK就是7001了(因为2001 - 7000)接收端其实之前 就已经收到了, 被放到了接收端操作系统内核的接收缓冲区中;TCP　总结特性两个原则：可靠传输、尽量提高效率１、连接管理２、确认应答（可靠传输的核心）３、超时重传（确认应答的重要补充）４、滑动窗口（提高效率的保证）５、快速重传（超时重传和滑动窗口两者的结合）６、流量控制    流量控制窗口７、拥塞控制    拥塞窗口    两者取小（ｍｉｎ）８、延时应答，滑动窗口直接相关９、捎带应答，基于延时应答。两个数据合并成一条（应用层的应答数据和上一条请求的　ACK　数据）TCP　特性：整理博客面向字节流的情况下，错误的理解了应用层数据包的边界：什么是粘包问题、如何解决１、使用明确的分隔符作为包的边界２、明确定义一个应用层数据报的长度定义合理的应用层协议TCP　异常情况TCP　和　UDP　区别类型TCPUDP可靠性可靠不可靠连接性面向连接无连接报文面向字节流面向报文（保留报文的边界）效率传输效率低传输效率高双工性全双工（点到点）一对一、一对多、多对一、多对多流量控制有（滑动窗口）无拥塞控制有（慢开始、拥塞避免、快重传、快恢复）无网络层IP　协议头TCP　协议头长度　＋　IP　首部长度　＝　IP　协议头长度身份标识都是相同的
        按照上述顺序发送、加入接收到的顺序乱了        －－３位标志

第一位保留(保留的意思是现在不用, 但是还没想好说不定以后要用到). 
第二位置为1 表示禁止分片, 这时候如果报文长度超过MTU, IP模块就会丢弃报文. 

第三位表示"更多分片", 如果分 片了的话, 最后一个分片置为1, 其他是0. 类似于一个结束标记.


网段划分
IP　地址划分为两个部分，网络号和主机号
网络号: 保证相互连接的两个网段具有不同的标识; 
主机号: 同?网段内, 主机之间具有相同的网络号, 但是必须有不同的主机号;
主机１：192.168.1.10
主机２：192.168.1.1
主机３：192.168.1.11
主机号：10、1、11

网络地址划分
A类 ：0.0.0.0　到　127.255.255.255 
B类 ：128.0.0.0　到　191.255.255.255 
C类 ：192.0.0.0　到　223.255.255.255 
D类 ：224.0.0.0　到　239.255.255.255 
E类 ：240.0.0.0　到　247.255.255.255

笔试：根据　IP　地址和子网掩码计算网络号与子网地址范围    按位与操作计算网络号、主机号从全　０　到全　１　就是子网的地址范围
特殊　IP　地址
主机号全　１　的时广播地址
主机号为　０　的为网络号
127.*环回（lookback）IP    127.0.0.1
　





